{"version":3,"sources":["components/tab-body-container.js","List.js","components/button.js","components/modal.js","FormModal.js","Hint.js","Form.js","const/languages.js","hoc/withLoading.js","App.js","index.js"],"names":["Container","styled","div","TabBodyContainer","children","title","ListItem","List","langs","map","lang","index","Button","button","modalRoot","document","getElementById","Modal","props","ReactDOM","createPortal","ButtonWrapper","FormModal","confirm","cancel","onClick","HintContainer","HintInner","PopupContainer","Hint","useState","showPopup","setShowPopup","ref","useRef","useEffect","current","focus","onBlur","tabIndex","Label","label","Input","input","ButtonContainer","FormButton","Form","onAddLang","text","setText","showModal","setShowModal","onSubmit","event","preventDefault","type","value","onChange","e","target","LANGUAGES","LoadDiv","Header","header","HeaderUl","ul","HeaderLi","li","focused","withLoading","WrappedComponent","fetchData","data","tab","setTab","setLangs","Promise","resolve","setTimeout","setData","fetch","a","Loading","render"],"mappings":"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","file":"static/js/main.9e720aa1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 12px 64px;\n`\n\nexport const TabBodyContainer = ({ children, title }) => {\n  return (\n    <Container>\n      <h4>{ title }</h4>\n      { children }\n    </Container>\n  )\n}","import styled from 'styled-components';\nimport { TabBodyContainer } from './components/tab-body-container';\n\nconst ListItem = styled.div`\n  padding: 8px 16px;\n\n  &:nth-child(n+2) {\n    border-top: 1px solid #D9DBDE;\n  }\n`\n\nexport const List = ({ langs }) => {\n\n  return (\n    <TabBodyContainer title=\"取り扱い言語リスト\">\n      <div>\n        {\n          langs.map((lang, index) => {\n            return <ListItem key={index}>{ lang }</ListItem>\n          })\n        }\n      </div>\n    </TabBodyContainer>\n  )\n}\n\n// import React from 'react';\n\n// export class List extends React.Component {\n//   render() {\n//     const {title} = this.props;\n//     return (\n//       <div>\n//         <h4>{ title }</h4>\n//         <div>リストです。</div>\n//       </div>\n//     )\n//   }\n// }","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 3px;\n  background-color: #2196F3;\n  padding: 8px 16px;\n  min-width: 100px;\n  font-size: 14px;\n  font-weight: bold;\n  color: white;\n  cursor: pointer;\n`","import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, .5);\n`\n\nexport const Modal = (props) => {\n  return ReactDOM.createPortal(\n    <Container>\n      { props.children }\n    </Container>,\n    modalRoot,\n  )\n}\n","import { Modal } from \"./components/modal\";\nimport { Button } from \"./components/button\";\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  width: 240px;\n  border-radius: 10px;\n  padding: 24px 36px;\n  background-color: white;\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 24px;\n`\n\nexport const FormModal = ({ confirm, cancel }) => {\n  return (\n    <Modal>\n      <Container>\n        <div>本当に作成しますか？</div>\n        <ButtonWrapper>\n          <Button onClick={cancel}>Cancel</Button>\n          <Button onClick={confirm}>OK</Button>\n        </ButtonWrapper>\n      </Container>\n    </Modal>\n  )\n}","import styled from 'styled-components';\nimport { useState, useRef, useEffect } from 'react';\n\nconst HintContainer = styled.div`\n  position: relative;\n  display: inline-flex;\n  margin-left: 12px;\n`\n\nconst HintInner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: 1px solid #757575;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`\n\nconst PopupContainer = styled.div`\n  position: absolute;\n  left: 88%;\n  bottom: 12px;\n  display: flex;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 8px;\n  padding: 8px;\n  width: 140px;\n`\n\nexport const Hint = () => {\n  const [showPopup, setShowPopup] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) ref.current.focus();\n  })\n\n  return(\n    <HintContainer>\n      <HintInner onClick={() => setShowPopup(true)}>\n        ?\n      </HintInner>\n      {\n        showPopup && (\n          <PopupContainer ref={ref} onBlur={() => setShowPopup(false)} tabIndex={0}>\n            言語の名前です\n          </PopupContainer>\n        )\n      }\n    </HintContainer>\n  )\n}","import { useState } from 'react';\nimport { Button } from \"./components/button\";\nimport { TabBodyContainer } from \"./components/tab-body-container\";\nimport { FormModal } from \"./FormModal\"\nimport { Hint } from \"./Hint\"\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  color: #757575;\n  font-size: 14px;\n  font-weight: bold;\n`\n\nconst Input = styled.input`\n  border-radius: 3px;\n  padding: 4px 8px;\n  border: 1px solid black;\n`\n\nconst ButtonContainer = styled.div`\n  margin-top: 24px;\n`\n\nconst FormButton = styled(Button)`\n  width: 120px;\n`\n\nexport const Form = ({ onAddLang }) => {\n  const [text, setText] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    setShowModal(true);\n  }\n\n  return (\n    <TabBodyContainer title=\"新しい言語の追加\">\n      <form onSubmit={submitForm}>\n        <div>\n          <Label>言語</Label>\n          <Input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <Hint />\n        </div>\n        <ButtonContainer>\n          <FormButton>追加</FormButton>\n        </ButtonContainer>\n      </form>\n      {\n        showModal &&\n        <FormModal\n          confirm={() => onAddLang(text)}\n          cancel={() => setShowModal(false)}\n        />\n      }\n    </TabBodyContainer>\n  )\n}","export const LANGUAGES = [\n  'JavaScript',\n  'C++',\n  'Ruby',\n  'Java',\n  'PHP',\n  'Go'\n];\n\nexport const getLanguages = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(LANGUAGES);\n    }, 1000)\n  })\n}","import styled from \"styled-components\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst LoadDiv = styled.div`\npadding: 36px;\n`\n\nexport const withLoading = (WrappedComponent, fetchData) => {\n  return () => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n      fetch();\n    }, [])\n\n    const fetch = async () => {\n      const data = await fetchData();\n      setData(data);\n    }\n\n    const Loading = (\n      <LoadDiv>ロード中...</LoadDiv>\n    )\n\n    return data ? <WrappedComponent data={data} /> : Loading;\n  }\n}","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { List } from \"./List\";\nimport { Form } from \"./Form\";\nimport { getLanguages } from \"./const/languages\";\nimport { withLoading } from \"./hoc/withLoading\";\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 64px 0;\n  border-bottom: 1px solid #E0E0E0;\n`\n\nconst HeaderUl = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`\n\nconst HeaderLi = styled.li`\n  list-style: none;\n  padding: 4px 12px;\n  cursor: pointer;\n  border-bottom: ${props => props.focused ? '2px solid #F44336' : 'none'};\n`\n\nfunction App({ data }) {\n  // const [description, setDescription] = useState('クリック前の表示');\n  const [tab, setTab] = useState('list');\n  const [langs, setLangs] = useState(data);\n\n  const addLang = (lang) => {\n    setLangs([...langs, lang])\n    setTab('list');\n  }\n\n  // const changeDescription = () =>  {\n  //   setDescription('クリック後の表示です。');\n  // }\n\n  // tab条件分岐定義するなら\n  // const body = tab === 'list' ? <List /> : <Form />\n  return (\n    <div>\n      <Header>\n        <HeaderUl>\n          <HeaderLi focused={tab === 'list'} onClick={() => setTab('list')}>リスト</HeaderLi>\n          <HeaderLi focused={tab === 'form'} onClick={() => setTab('form')}>フォーム</HeaderLi>\n        </HeaderUl>\n      </Header>\n      {/* { description } */}\n      {\n        tab === 'list' ? <List langs={langs} /> : <Form onAddLang={addLang} />\n      }\n      {/* <button onClick={changeDescription}>ボタン</button> */}\n    </div>\n  );\n}\n\n// import React from 'react';\n// import { List } from \"./List\";\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { description: 'クリック前の表示' }\n//   }\n//   changeDesciption() {\n//     this.setState({\n//       description: 'クリック後の表示です。'\n//     })\n//   }\n\n//   render() {\n//     const { description } = this.state;\n//     return (\n//       <div>\n//         { description }\n//         <List title = \"取扱言語一覧\" />\n//         <button onClick={() =>  this.changeDesciption()}>\n//           ボタン\n//         </button>\n//       </div>\n//     )\n//   };\n// }\n\nexport default withLoading(App, getLanguages);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}